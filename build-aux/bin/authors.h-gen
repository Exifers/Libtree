#! /usr/bin/perl -w

use strict;
use utf8;
use Text::Wrap;

=item C<contents ($file)>

The contents of C<$file> (UTF-8) as a single string.

=cut

sub contents ($)
{
  my ($file) = @_;
  local $/;                     # Turn on slurp-mode.
  use IO::File;
  my $f = new IO::File $file, "<:encoding(utf-8)" or die;
  my $res = $f->getline;
  $f->close or die;
  $res;
}

=item C<short (@author)>

Format the list of authors in three columns.  Return a list of lines.

=cut

sub short(@)
{
    my (@author) = @_;
    my @res;
    my $line = '';
    for (my $i = 0; $i < @author; ++$i)
    {
        if ($i % 3 == 2 || $i == @author - 1)
        {
            $line .= $author[$i];
            push @res, $line;
            $line = '';
        }
        else
        {
            $line .= sprintf "%-25s", $author[$i];
        }
    }
    @res;
}


=item C<stringify (@line)>

Prepare C<@line> as a single, multi-line, C/C++ string.

=cut

sub stringify(@)
{
    my (@line) = @_;
    my $res;
    for (my $i = 0; $i < @line; ++$i)
    {
        my $line = $line[$i];
        # Escape special characters.
        $line =~ s/([\\"])/\\$1/g;
        # Put in string.
        $line = "  \"$line\\n\"";
        # Backslashify if needed.
        $line = sprintf "%-76s \\\n", $line
            if $i < @line - 1;
        $res .= $line;
    }
    $res
}


## ------ ##
## Main.  ##
## ------ ##

my $AUTHORS = contents($ARGV[0]);
# Remove the footer (about encoding of the file etc.)
$AUTHORS =~ s/\s+\n--\n.*//ms;
my @author = ($AUTHORS =~ m{^\*\s+(.*?\S)\s{2}}mg);
my $short = stringify(short(@author));
my $long = stringify(split("\n", $AUTHORS));

binmode(STDOUT, ":utf8");
print <<EOF;
// Generated by $0, do not edit by hand.

#define PACKAGE_SHORT_AUTHORS \\
$short

#define PACKAGE_AUTHORS \\
$long
EOF
